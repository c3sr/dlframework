FROM nvidia/cuda-ppc64le:9.2-cudnn7-devel-ubuntu16.04
MAINTAINER Abdul Dakkak <dakkak@illinois.edu>

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION
ARG ARCH
ARG FRAMEWORK_VERSION
ARG GCC_VERSION
LABEL org.carml.base.build-date=$BUILD_DATE \
      org.carml.base.name="base carml gpu image" \
      org.carml.base.description="" \
      org.carml.base.url="https://www.carml.org/" \
      org.carml.base.vcs-ref=$VCS_REF \
      org.carml.base.vcs-url=$VCS_URL \
      org.carml.base.vendor="CarML" \
      org.carml.base.arch=$ARCH \
      org.carml.base.gcc.version=$GCC_VERSION \
      org.carml.base.version=$VERSION \
      org.carml.base.schema-version="1.0"

#########################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        software-properties-common && \
    add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
    apt-get update && apt-get install -y --no-install-recommends \
        gcc-${GCC_VERSION} \
        g++-${GCC_VERSION}  \
        libvips          \
        libjpeg-turbo8-dev \
        libturbojpeg \
        libvips-dev \
        libvips42 \
        build-essential \
        pkg-config \
        git \
        libopenblas-dev \
        libopenblas-base \
        python-dev \
        libcurl4-openssl-dev \
        libgtest-dev \
        cmake \
        curl \
        wget \
        unzip \
        apt-transport-https \
    && \
    rm -rf /var/lib/apt/lists/* && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 60 --slave /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} && \
    update-alternatives --config gcc && \
    gcc --version

# Add powerai repo
RUN curl -fsSL https://public.dhe.ibm.com/software/server/POWER/Linux/mldl/ubuntu/mldl-repo-network_4.0.0_ppc64el.deb -O && \
    dpkg -i mldl-repo-network_4.0.0_ppc64el.deb && \
    apt-get update && apt-get install -y --no-install-recommends \
		libnccl1 libnccl-dev \
    && \
    rm -rf /var/lib/apt/lists/*

ENV NCCL_ROOT /opt/DL/nccl
ENV LD_LIBRARY_PATH /opt/DL/nccl/lib:/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH}
ENV PATH ${NCCL_ROOT}/bin:/usr/local/cuda/bin:${PATH}

# Install Go
ENV GIMME_GO_VERSION "1.10.3"
ENV GIMME_OS "linux"
ENV GIMME_ARCH $ARCH

LABEL org.golang.version=$GIMME_GO_VERSION
LABEL org.golang.os=$GIMME_OS
LABEL org.golang.arch=$GIMME_ARCH

ADD https://raw.githubusercontent.com/travis-ci/gimme/master/gimme /usr/bin/gimme
RUN chmod +x /usr/bin/gimme
RUN gimme

ENV GOROOT "/root/.gimme/versions/go${GIMME_GO_VERSION}.${GIMME_OS}.${GIMME_ARCH}"
ENV PATH ${GOROOT}/bin:${PATH}

ENV GOPATH "/go"
ENV PATH $GOPATH/bin:$PATH

#Install Go packages
RUN go get github.com/Masterminds/glide && \
    go get -u github.com/jteeuwen/go-bindata/... && \
	  go get -u github.com/elazarl/go-bindata-assetfs/... && \
	  go get -u google.golang.org/grpc && \
    go get -u gonum.org/v1/gonum/... && \
    go get -u github.com/golang/dep/cmd/dep && \
	  go get -u github.com/gogo/protobuf/proto && \
	  go get -u github.com/gogo/protobuf/gogoproto && \
	  go get -u github.com/golang/protobuf/protoc-gen-go && \
	  go get -u github.com/gogo/protobuf/protoc-gen-gofast && \
	  go get -u github.com/gogo/protobuf/protoc-gen-gogofaster && \
	  go get -u github.com/gogo/protobuf/protoc-gen-gogoslick && \
	  go get -u -d github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway && \
	  go get -u -d github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger && \
	  go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway && \
	  go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger && \
	  go get -u github.com/go-swagger/go-swagger/cmd/swagger

ENV FRAMEWORKS_DIR /opt
ENV GODEBUG cgocheck=0
